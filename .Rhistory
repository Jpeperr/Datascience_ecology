} else {
# Load the existing ROI data from the saved RData file
load(roi_file)
}
getwd()
# PACKAGES
auto_install_package <- function(package_names_list){
for(package_name in package_names_list){
if(!(package_name %in% rownames(installed.packages()))){
install.packages(package_name, dependencies = TRUE)
}
library(package_name, character.only = TRUE)
}
}
auto_install_package(c("tidyverse", "phenofit", "bfast", "phenocamr", "phenopix",
"imager", "tools"))
# Step 1: Set your paths
img_folder <- "data/raw/data/H5R0-01"   # <-- replace with your image folder path
roi_folder <- "data/processed/roi_output" # folder to save ROI image previews
roi_file <- "data/processed/roi_output/roi.data.Rdata" # path to saved ROI definition
vi_folder <- "data/processed/vi_output"             # optional: where to save VI output
date.code <- "yyyy-mm-dd-HH-MM-SS"
# Step 2: Get list of image files
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Draw ROI or load existing ROI
if (!file.exists(roi_file)) {
# Define the names for the ROIs (adjust if needed)
roi_names <- c("ROI1")  # Adjust ROI names as needed
# Call DrawMULTIROI function to draw ROI on the image
roi <- DrawMULTIROI(
path_img_ref = image_files[1],  # Path to the first image
path_ROIs = roi_folder,            # Directory to store ROI and coordinates
nroi = 1,                       # Number of ROIs to draw
roi.names = roi_names,          # Define ROI names
file.type = '.JPG'              # File type for images
)
# Save the ROI data as an RData file
save(roi, file = roi_file)
} else {
# Load the existing ROI data from the saved RData file
load(roi_file)
}
# Step 1: Set your paths
img_folder <- "data/raw/data/H5R0-01"   # <-- replace with your image folder path
roi_folder <- "data/processed/roi_output" # folder to save ROI image previews
roi_file <- "data/processed/roi_output/roi.data.Rdata" # path to saved ROI definition
vi_folder <- "data/processed/vi_output"             # optional: where to save VI output
date.code <- "yyyy-mm-dd-HH-MM-SS"
# Step 2: Get list of image files
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Draw ROI or load existing ROI
if (!file.exists(roi_file)) {
# Define the names for the ROIs (adjust if needed)
roi_names <- c("ROI1")  # Adjust ROI names as needed
# Call DrawMULTIROI function to draw ROI on the image
roi <- DrawMULTIROI(
path_img_ref = image_files[1],  # Path to the first image
path_ROIs = roi_folder,            # Directory to store ROI and coordinates
nroi = 1,                       # Number of ROIs to draw
roi.names = roi_names,          # Define ROI names
file.type = '.JPG'              # File type for images
)
# Save the ROI data as an RData file
save(roi, file = roi_file)
} else {
# Load the existing ROI data from the saved RData file
load(roi_file)
}
for (filename in image_files) {
# Extract the filename from the path
filename_clean <- basename(filename)
# Preprocess the filename to replace 'h', 'm', and 's' with appropriate symbols or remove them
filename_clean <- gsub("h", "-", filename_clean)  # replace 'h' with ':'
filename_clean <- gsub("m", "-", filename_clean)  # replace 'm' with ':'
filename_clean <- gsub("00", "00", filename_clean)  # keep '00' if needed
# Get the full path of the new filename
new_filename <- file.path(dirname(filename), filename_clean)
# Rename the original file to the new filename (this will overwrite the original file)
file.rename(filename, new_filename)
# Print renaming info (optional, to track changes)
print(paste("Renamed:", filename, "to", new_filename))
}
y
# PACKAGES
auto_install_package <- function(package_names_list){
for(package_name in package_names_list){
if(!(package_name %in% rownames(installed.packages()))){
install.packages(package_name, dependencies = TRUE)
}
library(package_name, character.only = TRUE)
}
}
auto_install_package(c("tidyverse", "phenofit", "bfast", "phenocamr", "phenopix",
"imager", "tools"))
# Step 1: Set your paths
img_folder <- "data/raw/data/H5R0-01"   # <-- replace with your image folder path
roi_folder <- "data/processed/roi_output" # folder to save ROI image previews
roi_file <- "data/processed/roi_output/roi.data.Rdata" # path to saved ROI definition
vi_folder <- "data/processed/vi_output"             # optional: where to save VI output
date.code <- "yyyy-mm-dd-HH-MM-SS"
# Step 2: Get list of image files
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Draw ROI or load existing ROI
if (!file.exists(roi_file)) {
# Define the names for the ROIs (adjust if needed)
roi_names <- c("ROI1")  # Adjust ROI names as needed
# Call DrawMULTIROI function to draw ROI on the image
roi <- DrawMULTIROI(
path_img_ref = image_files[1],  # Path to the first image
path_ROIs = roi_folder,            # Directory to store ROI and coordinates
nroi = 1,                       # Number of ROIs to draw
roi.names = roi_names,          # Define ROI names
file.type = '.JPG'              # File type for images
)
# Save the ROI data as an RData file
save(roi, file = roi_file)
} else {
# Load the existing ROI data from the saved RData file
load(roi_file)
}
# Step 2: Get list of image files
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Draw ROI or load existing ROI
if (!file.exists(roi_file)) {
# Define the names for the ROIs (adjust if needed)
roi_names <- c("ROI1")  # Adjust ROI names as needed
# Call DrawMULTIROI function to draw ROI on the image
roi <- DrawMULTIROI(
path_img_ref = image_files[1],  # Path to the first image
path_ROIs = roi_folder,            # Directory to store ROI and coordinates
nroi = 1,                       # Number of ROIs to draw
roi.names = roi_names,          # Define ROI names
file.type = '.JPG'              # File type for images
)
# Save the ROI data as an RData file
save(roi, file = roi_file)
} else {
# Load the existing ROI data from the saved RData file
load(roi_file)
}
# PACKAGES
auto_install_package <- function(package_names_list){
for(package_name in package_names_list){
if(!(package_name %in% rownames(installed.packages()))){
install.packages(package_name, dependencies = TRUE)
}
library(package_name, character.only = TRUE)
}
}
auto_install_package(c("tidyverse", "phenofit", "bfast", "phenocamr", "phenopix",
"imager", "tools"))
# Step 1: Set your paths
img_folder <- "data/raw/data/H5R0-01"   # <-- replace with your image folder path
roi_folder <- "data/processed/roi_output" # folder to save ROI image previews
roi_file <- "data/processed/roi_output/roi.data.Rdata" # path to saved ROI definition
vi_folder <- "data/processed/vi_output"             # optional: where to save VI output
date.code <- "yyyy-mm-dd-HH-MM-SS"
# Step 2: Get list of image files
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Draw ROI or load existing ROI
if (!file.exists(roi_file)) {
# Define the names for the ROIs (adjust if needed)
roi_names <- c("ROI1")  # Adjust ROI names as needed
# Call DrawMULTIROI function to draw ROI on the image
roi <- DrawMULTIROI(
path_img_ref = image_files[1],  # Path to the first image
path_ROIs = roi_folder,            # Directory to store ROI and coordinates
nroi = 1,                       # Number of ROIs to draw
roi.names = roi_names,          # Define ROI names
file.type = '.JPG'              # File type for images
)
# Save the ROI data as an RData file
save(roi, file = roi_file)
} else {
# Load the existing ROI data from the saved RData file
load(roi_file)
}
getwd()
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
image_files
# Step 2: Get list of image files and filter out the bad photos
# Define paths
original_folder <- "data/raw/data/H5_R0-01"
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
original_files <- list.files(original_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder)
# Filter out the bad ones (comparing just the file names, not full paths)
filtered_files <- original_files[!basename(original_files) %in% bad_files]
filtered_files
original_files
bad_files
# Step 2: Get list of image files and filter out bad photos
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder)
# Filter out the bad ones (comparing just the file names, not full paths)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
filtered_files
bad_files
bad_folder
bad_files
image_files
# Step 2: Get list of image files and filter out bad photos
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder, pattern = "\\.JPG$", full.names = TRUE)
# Filter out the bad ones (comparing just the file names, not full paths)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
bad_files
# Filter out the bad ones (keep full path for image_files)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
# Step 2: Get list of image files and filter out bad photos
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder, pattern = "\\.JPG$", full.names = TRUE)
# Filter out the bad ones (keep full path for image_files)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
filtered_files
bad_files
# PACKAGES
auto_install_package <- function(package_names_list){
for(package_name in package_names_list){
if(!(package_name %in% rownames(installed.packages()))){
install.packages(package_name, dependencies = TRUE)
}
library(package_name, character.only = TRUE)
}
}
auto_install_package(c("tidyverse", "phenofit", "bfast", "phenocamr", "phenopix",
"imager", "tools"))
# Step 1: Set your paths
img_folder <- "data/raw/data/H5R0-01"  # <-- replace with your image folder path
roi_folder <- "data/processed/roi_output"                  # folder to save ROI image previews
roi_file <- "data/processed/roi_output/roi.data.Rdata"                # path to saved ROI definition
vi_folder <- "data/processed/vi_output"             # optional: where to save VI output
date.code <- "yyyy-mm-dd-HH-MM-SS"
# Function to (re)create a folder: deletes existing and makes a fresh one
recreate_folder <- function(folder_path) {
if (dir.exists(folder_path)) {
unlink(folder_path, recursive = TRUE)  # delete the folder and its contents
}
dir.create(folder_path, recursive = TRUE)  # create new folder
}
# Recreate folders
recreate_folder(roi_folder)
recreate_folder(vi_folder)
# Step 2: Get list of image files and filter out bad photos
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder, pattern = "\\.JPG$", full.names = TRUE)
# Filter out the bad ones (keep full path for image_files)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
image_files
bad_files
# PACKAGES
auto_install_package <- function(package_names_list){
for(package_name in package_names_list){
if(!(package_name %in% rownames(installed.packages()))){
install.packages(package_name, dependencies = TRUE)
}
library(package_name, character.only = TRUE)
}
}
auto_install_package(c("tidyverse", "phenofit", "bfast", "phenocamr", "phenopix",
"imager", "tools"))
# Step 1: Set your paths
img_folder <- "data/raw/data/H5R0-01"  # <-- replace with your image folder path
roi_folder <- "data/processed/roi_output"                  # folder to save ROI image previews
roi_file <- "data/processed/roi_output/roi.data.Rdata"                # path to saved ROI definition
vi_folder <- "data/processed/vi_output"             # optional: where to save VI output
date.code <- "yyyy-mm-dd-HH-MM-SS"
# Function to (re)create a folder: deletes existing and makes a fresh one
recreate_folder <- function(folder_path) {
if (dir.exists(folder_path)) {
unlink(folder_path, recursive = TRUE)  # delete the folder and its contents
}
dir.create(folder_path, recursive = TRUE)  # create new folder
}
# Recreate folders
recreate_folder(roi_folder)
recreate_folder(vi_folder)
# Step 2: Get list of image files and filter out bad photos
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder, pattern = "\\.JPG$", full.names = TRUE)
image_files
bad_files
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
filtered_files
image_files
# Step 2: Get list of image files and filter out bad photos
bad_folder <- "H5_filter/H5R0-01/bad"
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder, pattern = "\\.JPG$", full.names = TRUE)
# Filter out the bad ones (keep full path for image_files)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
DrawMULTIROI(
path_img_ref = image_files[1],  # Path to the first image
path_ROIs = roi_folder,            # Directory to store ROI and coordinates
roi.names = "RO1",
nroi = 1,                       # Number of ROIs to draw
)
ROI_from <- "data/processed/roi_outputroi.data.Rdata"
ROI_to <- file.path("data/processed/roi_output", "roi.data.RData")
# Move the file
file.rename(ROI_from, ROI_to)
img_proc_folder <- "data/processed/img_proc_folder"  # where to store renamed files
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
filtered_files
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
image_files
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
image_files
bad_files
filtered_files
# List all file names
image_files <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
bad_files <- list.files(bad_folder, pattern = "\\.JPG$", full.names = FALSE)
# Filter out the bad ones (keep full path for image_files)
filtered_files <- image_files[!basename(image_files) %in% bad_files]
filtered_files
image_files
filtered_files
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
phenocamr::extract_date("2013-07-16-12h00m00.JPG", "yyyy-mm-dd-HHhMMmSS")
phenocamr::extract_date("2013-07-16-12h00m00.JPG", "yyyy-mm-dd-HHhMMmSS")
filename <- "2013-07-16-12h00m00.JPG"
# Remove extension first
file_no_ext <- tools::file_path_sans_ext(filename)
# Parse the datetime using the correct format
timestamp <- as.POSIXct(file_no_ext, format = "%Y-%m-%d-%Hh%Mm%S")
print(timestamp)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI_V2.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
getwd()
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI_V2.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/test_ROI_VI_V2.R", echo=TRUE)
# PACKAGES
auto_install_package <- function(package_names_list){
for(package_name in package_names_list){
if(!(package_name %in% rownames(installed.packages()))){
install.packages(package_name, dependencies = TRUE)
}
library(package_name, character.only = TRUE)
}
}
auto_install_package(c("tidyverse", "phenofit", "bfast", "phenocamr", "phenopix",
"imager", "tools", "zoo"))
# 🔁 Loop over multiple site folders
site_ids <- c("H5R0-01", "H5R0-02")  # Add more site IDs as needed
for (site in site_ids) {
cat("\n⏳ Processing site:", site, "\n")
# Step 1: Set your paths (dynamic based on site)
img_folder <- file.path("data/raw/data", site)
roi_folder <- file.path("data/processed/roi_output")
roi_folderto <- file.path("data/processed/roi_output",site)
roi_file <- file.path(roi_folder, paste0(site, "roi.data.Rdata"))
vi_folder <- file.path("data/processed/vi_output", site)
date.code <- "yyyy-mm-dd"
filter <- file.path("H5_filter", site, "bad")
# Function to (re)create a folder: deletes existing and makes a fresh one
recreate_folder <- function(folder_path) {
if (dir.exists(folder_path)) {
unlink(folder_path, recursive = TRUE)
}
dir.create(folder_path, recursive = TRUE)
}
# Recreate folders
recreate_folder(roi_folder)
recreate_folder(vi_folder)
# Step 2: Get list of image files
all_images <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Filter out bad images
bad_images <- list.files(filter, pattern = "\\.JPG$", full.names = FALSE)
image_files <- all_images[!basename(all_images) %in% bad_images]
cat("  Total images:", length(all_images), "\n")
cat("  Filtered out:", length(bad_images), "\n")
cat("  Remaining images:", length(image_files), "\n")
DrawMULTIROI(
path_img_ref = image_files[1],
path_ROIs = roi_folder,
roi.names = "RO1",
nroi = 1
)
# Ask user to confirm drawing is done
readline(prompt = "Are you done with your ROI? Type y or n: ")
# Define source and destination paths
ROI_from <- file.path(roi_folder, "roi.data.Rdata")
ROI_to <- file.path(roi_folder, paste0(site, "/roi.data.Rdata"))
file.rename(ROI_from, ROI_to)
# Step 5: Extract Vegetation Indices (VIs)
extractVIs(
img.path = img_folder,
roi.path = roi_folder,
vi.path = vi_folder,
date.code = date.code,
log.file = "data/processed",
ncores = 1,
file.type = ".JPG"
)
# Move VI result
VI_from <- file.path("data/processed", "vi_outputVI.data.Rdata")
VI_to <- file.path(vi_folder, paste0("vi_outputVI_", site, ".Rdata"))
file.rename(VI_from, VI_to)
}
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
roi_folder <- file.path("data/processed/roi_output",  paste0(images, site))
roi_folder <- file.path("data/processed/roi_output",  paste0("/images", site))
images_folder <-file.path("data/processed/roi_output",  paste0(site), "images")
roi_file <- file.path(images_folder, paste0("roi.data.Rdata"))
vi_folder <- file.path("data/processed/vi_output", site)
date.code <- "yyyy-mm-dd"
filter <- file.path("H5_filter", site, "bad")
# Function to (re)create a folder: deletes existing and makes a fresh one
recreate_folder <- function(folder_path) {
if (dir.exists(folder_path)) {
unlink(folder_path, recursive = TRUE)
}
dir.create(folder_path, recursive = TRUE)
}
# Recreate folders
recreate_folder(roi_folder)
recreate_folder(images_folder)
recreate_folder(vi_folder)
# Step 2: Get list of image files
all_images <- list.files(img_folder, pattern = "\\.JPG$", full.names = TRUE)
# Step 3: Filter out bad images
bad_images <- list.files(filter, pattern = "\\.JPG$", full.names = FALSE)
image_files <- all_images[!basename(all_images) %in% bad_images]
cat("  Total images:", length(all_images), "\n")
cat("  Filtered out:", length(bad_images), "\n")
cat("  Remaining images:", length(image_files), "\n")
DrawMULTIROI(
path_img_ref = image_files[1],
path_ROIs = images_folder,
roi.names = "RO1",
nroi = 1
)
# ROI_from <- file.path(roi_folder, "roi.data.Rdata")
# ROI_to <- file.path(roi_folder, paste0(site,"/images/roi.data.Rdata"))
# file.rename(ROI_from, ROI_to)
#
# Step 5: Extract Vegetation Indices (VIs)
extractVIs(
img.path = img_folder,
roi.path = roi_folder,
vi.path = vi_folder,
date.code = date.code,
log.file = "data/processed",
ncores = 1,
file.type = ".JPG"
)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
roi_folder
images_folder
roi_file
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
getwd()
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
# Move VI result
VI_from <- file.path("data/processed/vi_output/", site,"VI.data.Rdata")
VI_to <- file.path(vi_folder, paste0("vi_outputVI_", site, "Rdata"))
file.rename(VI_from, VI_to)
VI_from
# Move VI result
VI_from <- file.path("data/processed/vi_output", site + "VI.data.Rdata")
# Move VI result
VI_from <- file.path("data/processed/vi_output", paste0(site,  "VI.data.Rdata"))
VI_from
# Move VI result
VI_from <- file.path("data/processed/vi_output", paste0(site,  "VI.data.Rdata"))
VI_to <- file.path(vi_folder, paste0("vi_outputVI_", site, paste0(site,"VI_data")))
file.rename(VI_from, VI_to)
# Move VI result
VI_from <- file.path("data/processed/vi_output", paste0(site,  "VI.data.Rdata"))
VI_to <- file.path(vi_folder, paste0("vi_outputVI_", site, paste0(site,"VI.Rdata")))
file.rename(VI_from, VI_to)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
ROI_to
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
source("~/Documents/WUR/Period_5/Datascience_for_ecology/Datascience_ecology/Project/Datascience_ecology/R_script.R", echo=TRUE)
